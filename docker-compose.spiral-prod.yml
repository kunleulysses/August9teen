version: '3.8'
services:
  redis-cluster:
    image: bitnami/redis-cluster:7.0.14
    env_file:
      - .env.production
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_NODES: ${REDIS_NODES}
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

  spiral-app:
    build:
      context: ./server
      dockerfile: Dockerfile.spiral
    depends_on:
      - redis-cluster
    env_file:
      - .env.production
    environment:
      REDIS_CLUSTER_URL: ${REDIS_CLUSTER_URL}
      SHARD_ID: ${SHARD_ID}
      SPIRAL_KMS_KEY: ${SPIRAL_KMS_KEY}
      SPIRAL_EVENT_SECRET: ${SPIRAL_EVENT_SECRET}
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1G
    ports:
      - 9099:9099
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9099/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  spiral-explorer:
    build:
      context: ./client/spiral-explorer
    depends_on:
      - spiral-app
    ports:
      - 8080:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  prometheus:
    image: prom/prometheus:v2.48.1
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  grafana:
    image: grafana/grafana:10.2.0
    env_file:
      - .env.production
    volumes:
      - ./monitoring/grafana/spiral-dashboard.json:/var/lib/grafana/dashboards/spiral-dashboard.json
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    ports:
      - 3001:3000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  traefik:
    image: traefik:2.9.6
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - 80:80
    depends_on:
      - spiral-app
      - spiral-explorer
    labels:
      - "traefik.http.routers.explorer.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.metrics.rule=PathPrefix(`/metrics`)"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  default:
    driver: bridge