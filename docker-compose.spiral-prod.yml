version: '3.8'
services:
  redis-cluster:
    image: bitnami/redis-cluster:7.0
    environment:
      - REDIS_PASSWORD=spiralp@ss
      - REDIS_NODES=6
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "spiralp@ss", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  spiral-app:
    build:
      context: ./server
      dockerfile: Dockerfile.spiral
    depends_on:
      - redis-cluster
    environment:
      - REDIS_CLUSTER_URL=redis-cluster:6379,redis-cluster:6380,redis-cluster:6381,redis-cluster:6382,redis-cluster:6383,redis-cluster:6384
      - SHARD_ID=0
      - SPIRAL_KMS_KEY=prodkey
      - SPIRAL_EVENT_SECRET=prodsecret
    deploy:
      replicas: 3
    ports:
      - 9099:9099

  spiral-explorer:
    build:
      context: ./client/spiral-explorer
    depends_on:
      - spiral-app
    ports:
      - 8080:80

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    volumes:
      - ./monitoring/grafana/spiral-dashboard.json:/var/lib/grafana/dashboards/spiral-dashboard.json
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - 3001:3000

  traefik:
    image: traefik:2.9
    command:
      - --providers.docker=true
      - --entrypoints.web.address=:80
    ports:
      - 80:80
    depends_on:
      - spiral-app
      - spiral-explorer
    labels:
      - "traefik.http.routers.explorer.rule=PathPrefix(`/`)"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.metrics.rule=PathPrefix(`/metrics`)"

networks:
  default:
    driver: bridge