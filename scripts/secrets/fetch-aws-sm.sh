#!/usr/bin/env bash
set -euo pipefail

# Usage:
#   AWS_REGION=us-east-1 /opt/featherweight/scripts/secrets/fetch-aws-sm.sh
# Requires: aws cli configured with access to Secrets Manager

if [[ -z "${AWS_REGION:-}" ]]; then
  echo "AWS_REGION is required" >&2
  exit 2
fi

out_dir="/opt/featherweight/deploy"
out_file="$out_dir/secrets.env"
mkdir -p "$out_dir"

get_json() {
  local name="$1"
  aws secretsmanager get-secret-value \
    --region "$AWS_REGION" \
    --secret-id "$name" \
    --query SecretString \
    --output text
}

escape() { sed -e 's/\\/\\\\/g' -e 's/\r$//' -e 's/\n/ /g' -e 's/\"/"/g'; }

printf "# Generated by fetch-aws-sm.sh on %s\n" "$(date -Is)" >"$out_file.tmp"

printf "SPIRAL_EVENT_SECRET='%s'\n" "$(get_json SPIRAL_EVENT_SECRET | escape)" >>"$out_file.tmp"
printf "JWT_SECRET='%s'\n" "$(get_json JWT_SECRET | escape)" >>"$out_file.tmp"
printf "DATABASE_URL='%s'\n" "$(get_json DATABASE_URL | escape)" >>"$out_file.tmp"
printf "REDIS_URL='%s'\n" "$(get_json REDIS_URL | escape)" >>"$out_file.tmp"
printf "METRICS_BEARER_TOKEN='%s'\n" "$(get_json METRICS_BEARER_TOKEN | escape)" >>"$out_file.tmp"
printf "JWT_ISSUER='%s'\n" "$(get_json JWT_ISSUER | escape)" >>"$out_file.tmp"
printf "JWT_AUDIENCE='%s'\n" "$(get_json JWT_AUDIENCE | escape)" >>"$out_file.tmp"
printf "JWT_JWKS_URI='%s'\n" "$(get_json JWT_JWKS_URI | escape)" >>"$out_file.tmp"

mv -f "$out_file.tmp" "$out_file"
chmod 600 "$out_file"
echo "Wrote $out_file"
echo "Source it before restarts: set -a && source $out_file && set +a"

