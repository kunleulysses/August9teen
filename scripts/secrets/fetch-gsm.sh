#!/usr/bin/env bash
set -euo pipefail

# Usage:
#   PROJECT_ID=my-gcp-project /opt/featherweight/scripts/secrets/fetch-gsm.sh
# Requires: gcloud auth already configured for a principal with Secret Manager access

if [[ -z "${PROJECT_ID:-}" ]]; then
  echo "PROJECT_ID is required" >&2
  exit 2
fi

out_dir="/opt/featherweight/deploy"
out_file="$out_dir/secrets.env"
mkdir -p "$out_dir"

fetch() {
  local name="$1"
  gcloud secrets versions access latest \
    --project "$PROJECT_ID" \
    --secret "$name"
}

escape() {
  # Escape any embedded newlines and quotes for safe env writing
  sed -e 's/\\/\\\\/g' -e 's/\r$//' -e 's/\n/ /g' -e 's/\"/"/g'
}

printf "# Generated by fetch-gsm.sh on %s\n" "$(date -Is)" >"$out_file.tmp"

# Core secrets
printf "SPIRAL_EVENT_SECRET='%s'\n" "$(fetch SPIRAL_EVENT_SECRET | escape)" >>"$out_file.tmp"
printf "JWT_SECRET='%s'\n" "$(fetch JWT_SECRET | escape)" >>"$out_file.tmp"
printf "DATABASE_URL='%s'\n" "$(fetch DATABASE_URL | escape)" >>"$out_file.tmp"
printf "REDIS_URL='%s'\n" "$(fetch REDIS_URL | escape)" >>"$out_file.tmp"
printf "METRICS_BEARER_TOKEN='%s'\n" "$(fetch METRICS_BEARER_TOKEN | escape)" >>"$out_file.tmp"

# IdP (treat as secrets for simplicity)
printf "JWT_ISSUER='%s'\n" "$(fetch JWT_ISSUER | escape)" >>"$out_file.tmp"
printf "JWT_AUDIENCE='%s'\n" "$(fetch JWT_AUDIENCE | escape)" >>"$out_file.tmp"
printf "JWT_JWKS_URI='%s'\n" "$(fetch JWT_JWKS_URI | escape)" >>"$out_file.tmp"

mv -f "$out_file.tmp" "$out_file"
chmod 600 "$out_file"
echo "Wrote $out_file"
echo "Source it before restarts: set -a && source $out_file && set +a"

