# --- Builder stage ---
FROM node:20-alpine AS builder

WORKDIR /build

# Install system utilities for building native modules if necessary
RUN apk add --no-cache python3 make g++ curl bash git

# Copy only the files needed for dependency install and build
COPY package*.json ./
COPY tsconfig.json ./
COPY prisma ./prisma
COPY server/api ./server/api
COPY shared ./shared

# Install all dependencies and build
RUN npm ci --ignore-scripts \
  && npx prisma generate \
  && npm prune --production \
  && npm cache clean --force

# --- Production stage ---
FROM node:20-alpine AS prod

# Create a dedicated non-root user (uid 10001)
RUN addgroup -g 10001 nodeapp && adduser -D -u 10001 -G nodeapp nodeapp

WORKDIR /app

# Copy only production node_modules and built app code from builder
COPY --from=builder /build/node_modules ./node_modules
COPY --from=builder /build/server/api ./server/api
COPY --from=builder /build/shared ./shared
COPY --from=builder /build/package*.json ./

# Switch to non-root user
USER 10001:10001

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

CMD ["node", "server/api/server.js"]
