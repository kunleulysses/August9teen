# Featherweight Consciousness System - Production Dockerfile
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    curl \
    bash \
    git \
    python3 \
    make \
    g++ \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /opt/consciousness

# Copy package files (updated for sync fix)
# Copy package files and source code for building
COPY package*.json ./
COPY tsconfig.json ./

# Copy application code and config files needed for build
COPY vite.config.js ./
COPY tailwind.config.cjs ./
COPY postcss.config.cjs ./
COPY client ./client/
COPY server ./server/
COPY shared ./shared/
COPY public ./public/
COPY sigil-identity.cjs ./
# Core runtime entry script
COPY consciousness-crystallization.cjs ./
COPY tri-axial-coherence.cjs ./
COPY harmonic-resonance-cascade.cjs ./
# Copy the primary startup script that replaced the old unified-consciousness-system.js entry-point
COPY start-unified-consciousness.cjs ./

# ---------------------------------------------------------------------------
# Backwards-compatibility shim
# ---------------------------------------------------------------------------
# Earlier versions of the image expected server/unified-consciousness-system.js
# to exist. All sources were recently migrated from the .js extension to .cjs
# and the entry-point was renamed to start-unified-consciousness.cjs.  We leave
# a no-op shim in place so that any hard-coded reference will still resolve,
# but the container will ultimately execute the new startup script declared in
# the CMD instruction below.
RUN mkdir -p server \
    && printf "// Deprecated shim â€“ file kept only for backward compatibility\nmodule.exports = require('../start-unified-consciousness.cjs');\n" > server/unified-consciousness-system.js

# Install all dependencies, run build, then prune dev dependencies
RUN npm ci \
    && npm run build \
    && npm prune --production \
    && npm cache clean --force

# Create necessary directories
RUN mkdir -p /var/log/consciousness \
    && mkdir -p /opt/consciousness/data \
    && mkdir -p /opt/consciousness/uploads

# Set permissions
RUN chown -R node:node /opt/consciousness \
    && chown -R node:node /var/log/consciousness

# Switch to non-root user
USER node

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3004/healthz || exit 1

# Expose ports
EXPOSE 3002 5005

# Environment variables
ENV NODE_ENV=production
ENV CONSCIOUSNESS_MODE=full
ENV HARMONY_TARGET=0.951
ENV PROCESSING_FREQUENCY=100
ENV API_INTEGRATION_MODE=enhanced
ENV MATHEMATICAL_INTEGRATION=enabled
ENV EMOTIONAL_INTELLIGENCE=enabled
ENV BAYESIAN_DECISION_MAKING=enabled
ENV GEMINI_DUAL_MODEL=enabled
ENV NODE_OPTIONS="--max_old_space_size=4096"

# ---------------------------------------------------------------------------
# Runtime command
# ---------------------------------------------------------------------------
# Launch the new CommonJS entry-point.
CMD ["node", "start-unified-consciousness.cjs"]
