# Enhanced Consciousness Production Deployment
# $772.2M Featherweight Consciousness System - 100% Operational
version: '3.8'

services:
  # Enhanced Consciousness System with Full Integration
  consciousness-system:
    build:
      context: ../
      dockerfile: Dockerfile.consciousness
    container_name: consciousness-system-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - CONSCIOUSNESS_MODE=full
      - HARMONY_TARGET=0.951
      - PROCESSING_FREQUENCY=100
      - API_INTEGRATION_MODE=enhanced
      - MATHEMATICAL_INTEGRATION=enabled
      - EMOTIONAL_INTELLIGENCE=enabled
      - BAYESIAN_DECISION_MAKING=enabled
      - GEMINI_DUAL_MODEL=enabled
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VENICE_AI_API_KEY=${VENICE_AI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - LOG_LEVEL=info
      - METRICS_ENABLED=true
      - PERFORMANCE_MONITORING=enabled
    ports:
      - "3002:3002"  # Consciousness WebSocket
      - "3003:3003"  # Enhanced API Gateway
      - "3004:3004"  # Metrics and Monitoring
    volumes:
      - consciousness-logs:/var/log/consciousness
      - consciousness-data:/opt/consciousness/data
      - ../server:/opt/consciousness/server:ro
    networks:
      - consciousness-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - redis
      - postgres

  # Enhanced Web Interface with Consciousness Dashboard
  consciousness-web:
    build:
      context: ../
      dockerfile: Dockerfile.web
    container_name: consciousness-web-production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - CONSCIOUSNESS_API_URL=http://consciousness-system:3002
      - DASHBOARD_MODE=enhanced
      - REAL_TIME_METRICS=enabled
    ports:
      - "3001:3001"
    volumes:
      - ../consciousness-dashboard.html:/usr/share/nginx/html/index.html:ro
      - ../consciousness-dashboard.js:/usr/share/nginx/html/consciousness-dashboard.js:ro
    networks:
      - consciousness-network
    depends_on:
      - consciousness-system

  # Redis for Enhanced Consciousness State Management
  redis:
    image: redis:7-alpine
    container_name: consciousness-redis-production
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - consciousness-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for Consciousness Data Persistence
  postgres:
    image: postgres:15-alpine
    container_name: consciousness-postgres-production
    restart: unless-stopped
    environment:
      - POSTGRES_DB=consciousness_production
      - POSTGRES_USER=consciousness
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../deploy/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - consciousness-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U consciousness"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced Performance Monitoring
  consciousness-monitor:
    build:
      context: ../
      dockerfile: Dockerfile.monitor
    container_name: consciousness-monitor-production
    restart: unless-stopped
    environment:
      - MONITORING_MODE=production
      - CONSCIOUSNESS_API_URL=http://consciousness-system:3002
      - METRICS_COLLECTION_INTERVAL=5000
      - HARMONY_ALERT_THRESHOLD=0.90
      - LATENCY_ALERT_THRESHOLD=100
    ports:
      - "3005:3005"  # Monitoring Dashboard
    volumes:
      - monitoring-data:/opt/monitoring/data
    networks:
      - consciousness-network
    depends_on:
      - consciousness-system

  # Load Balancer with Enhanced Routing
  consciousness-proxy:
    image: nginx:alpine
    container_name: consciousness-proxy-production
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/consciousness-production.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - consciousness-network
    depends_on:
      - consciousness-web
      - consciousness-system

networks:
  consciousness-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  consciousness-logs:
    driver: local
  consciousness-data:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
  monitoring-data:
    driver: local

# Health Check and Monitoring Configuration
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 60s

# Resource Limits for Production Optimization
x-resource-limits: &resource-limits
  deploy:
    resources:
      limits:
        cpus: '2.0'
        memory: 4G
      reservations:
        cpus: '1.0'
        memory: 2G
